set -g default-terminal $TERM
set -g default-shell $SHELL

#######################
#                     #
# Better defaults     #
#                     #
#######################
# Use a large scrollback limit
set -g history-limit 10000

# Increase timeout when displaying pane numbers using `tmux display-panes`
set -g display-panes-time 2000

# Automatically update window numbers to be sequential
set -g renumber-windows on

# Start window numbering at 1
set -g base-index 1

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Allow for faster key repetition
set -g escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Disable automatic renaming
set -g allow-rename off


#######################
#                     #
# Theming             #
#                     #
#######################
# Status bar theming
set -g status-interval 1
set -g status-justify centre
set -g status-left-length 30
set -g status-left '#[fg=green,bright]#h #[fg=blue]| #[fg=red]â™¥ #(test -f $HOME/Documents/GitHub/scripts/tmux/battery.sh && $HOME/Documents/GitHub/scripts/tmux/battery.sh || echo "?")%'
set -g status-right '  '

# Grey out non-active panes
set -g window-style 'bg=colour18'
set -g window-active-style 'bg=colour0'
 
# Set the color of the pane borders
set -g status-bg colour19
set -g pane-border-style 'fg=colour19,bg=colour19'
set -g pane-active-border-style 'fg=colour19,bg=colour19'
set -g pane-border-status off

set -g window-status-format " #I #W "
set -g window-status-current-format " #I #W #{?window_zoomed_flag,+ ,}"
set -g window-status-style 'fg=colour18,bg=colour7'
set -g window-status-current-style 'fg=colour18,bold,bg=colour04'
set -g window-status-activity-style 'fg=default,italics'
set -g message-style 'fg=colour7,bold,bg=colour19'


#######################
#                     #
# Keybindings         #
#                     #
#######################
# Remap C-b to C-a
set -g prefix C-b
# Temporarily set to C-b to avoid using it while learning new mapping using Modifier key

# Go to previous window using C-a
bind-key -n M-p last-pane # mnemonic: previous
bind-key -n M-P last-window # mnemonic: previous

# Jump to start of line using C-a a // Allow sending commands to nested tmux sessions
bind-key a send-prefix

# Vim copypaste mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard' \; send-keys -X clear-selection
# copy-pipe instead of copy-pipe-and-cancel, clear selection after copy

bind-key -n M-s copy-mode # mnemonic: scroll
bind-key -n M-S copy-mode \; send-keys / # mnemonic: search

bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t:{end}
bind-key -n M-J select-window -n
bind-key -n M-K select-window -p

bind-key -n M-R command-prompt -p "New name: " "rename-window '%%'"
bind-key -n M-N command-prompt -p "New window: " "new-window -n '%%' -c '#{pane_current_path}'"

bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"


# Use current directory for new panes and windows
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind-key -n M-n new-window -c "#{pane_current_path}"

# Synchronize input to all panes in current window
bind -n M-a setw synchronize-panes # Mnemonic: atune

# Create a new window using current window layout
# Mnemonic: identical
if-shell -b '[ -e "$HOME/Documents/GitHub/Scripts/scripts/tmux_copy_layout/tmux_copy_layout.sh" ]' " \
    bind-key -n M-I run '"$HOME"/Documents/GitHub/Scripts/scripts/tmux_copy_layout/tmux_copy_layout.sh'"

# Full-screen pane
bind-key -n M-f resize-pane -Z

bind-key -n M-X confirm-before "kill-window"

bind-key -n M-o display-panes # mnemonic: overview

bind-key -n M-O run-shell 'tmux choose-tree -wf"##{==:##{session_name},#{session_name}}"'

bind-key -n M-H swap-window -t -1 # Move window to the left
bind-key -n M-L swap-window -t +1 # Move window to the right


#######################
#                     #
# vim-tmux-navigator  #
#                     #
#######################
# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
bind-key -n 'M-p' if-shell "$is_vim" 'send-keys M-p'  'select-pane -l'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
#if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-p' select-pane -l
