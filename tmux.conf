# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
#set-option -g status-bg colour235 #base02
#set-option -g status-fg colour136 #yellow
#set-option -g status-attr default
#
## default window title colors
#set-window-option -g window-status-fg colour244 #base0
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim
#
## active window title colors
#set-window-option -g window-status-current-fg colour166 #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright
#
## pane border
#set-option -g pane-border-fg colour235 #base02
#set-option -g pane-active-border-fg colour240 #base01
#
## message text
#set-option -g message-bg colour235 #base02
#set-option -g message-fg colour166 #orange
#
## pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour colour166 #orange
#
## clock
#set-window-option -g clock-mode-colour green #green

# status bar theming
set -g status-interval 1
set-option -g status-bg colour234
set-option -g window-status-bg colour234
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green,bright]#H #[fg=blue]| #[fg=red]â™¥ #(upower -i /org/freedesktop/UPower/devices/DisplayDevice | egrep "percentage:" | sed -r "s/^.*percentage:\s*([0-9]+)\.?.*$/\1/g")%'
set -g status-right '#[fg=red,bright]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=blue]| #[fg=green]%a %l:%M:%S %p #[fg=blue]| #[fg=red]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allow for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Bind <C-a> + m to "editor, server, commandline"-layout
is_single_pane="test $(tmux list-panes | wc -l) -eq 1"
bind m if-shell "$is_single_pane" "set-window-option main-pane-width 125\; split-window\; split-window\; select-layout main-vertical \; select-pane -L" 

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded ..."

# window renaming
set-option -g allow-rename off

# Use current directory for new panes and windows
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
